// <autogenerated />
using TestSandBox.Serialization;

namespace TestSandBox.SerializedObjects.PlainObjects
{
    public partial class SomeGenericClassPo1
    {
        public ObjectPtr Value;
    }
}

namespace TestSandBox.SerializedObjects
{
    public partial class SomeGenericClass<T>: ISerializable
    {
        Type ISerializable.GetPlainObjectType() => typeof(PlainObjects.SomeGenericClassPo1);

        void ISerializable.OnWritePlainObject(object plainObject, ISerializer serializer)
        {
            OnWritePlainObject((PlainObjects.SomeGenericClassPo1)plainObject, serializer);
        }

        private void OnWritePlainObject(PlainObjects.SomeGenericClassPo1 plainObject, ISerializer serializer)
        {
            plainObject.Value = serializer.GetSerializedObjectPtr(Value);
        }

        void ISerializable.OnReadPlainObject(object plainObject, IDeserializer deserializer)
        {
            OnReadPlainObject((PlainObjects.SomeGenericClassPo1)plainObject, deserializer);
        }

        private void OnReadPlainObject(PlainObjects.SomeGenericClassPo1 plainObject, IDeserializer deserializer)
        {
            Value = deserializer.GetDeserializedObject<T>(plainObject.Value);
        }

    }
}

namespace TestSandBox.SerializedObjects.PlainObjects
{
    public partial class SomeGenericClassPo2
    {
        public ObjectPtr Value;
        public ObjectPtr OtherValue;
    }
}

namespace TestSandBox.SerializedObjects
{
    public partial class SomeGenericClass<T, U>: ISerializable
    {
        Type ISerializable.GetPlainObjectType() => typeof(PlainObjects.SomeGenericClassPo2);

        void ISerializable.OnWritePlainObject(object plainObject, ISerializer serializer)
        {
            OnWritePlainObject((PlainObjects.SomeGenericClassPo2)plainObject, serializer);
        }

        private void OnWritePlainObject(PlainObjects.SomeGenericClassPo2 plainObject, ISerializer serializer)
        {
            plainObject.Value = serializer.GetSerializedObjectPtr(Value);
            plainObject.OtherValue = serializer.GetSerializedObjectPtr(OtherValue);
        }

        void ISerializable.OnReadPlainObject(object plainObject, IDeserializer deserializer)
        {
            OnReadPlainObject((PlainObjects.SomeGenericClassPo2)plainObject, deserializer);
        }

        private void OnReadPlainObject(PlainObjects.SomeGenericClassPo2 plainObject, IDeserializer deserializer)
        {
            Value = deserializer.GetDeserializedObject<T>(plainObject.Value);
            OtherValue = deserializer.GetDeserializedObject<U>(plainObject.OtherValue);
        }

    }
}
